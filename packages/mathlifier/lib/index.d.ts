import katex from 'katex';

/**
 * Renders inline math
 *
 * Takes a TeX expression and outputs a HTML string for the rendered math
 *
 * @param x TeX expression to be rendered
 * @param options defaults to `{wrap: false, throwOnError: false}`.
 * `wrap` is a custom option where the default `wrap===false` disables line breaks by default by adding braces to the TeX expression.
 * All KaTeX options are supported, and with the exception of `throwOnError` are left as default
 *
 * @returns HTML string generated by KaTeX representing inline math
 *
 * With default options, is equivalent to calling `katex.renderToString('{'+x+'}', {throwOnError: false})
 */
declare function math(x: string, options?: KatexOptionsInline): string;
interface KatexOptionsInline extends katex.KatexOptions {
    wrap?: boolean;
}

/**
 * Renders displayed math
 *
 * Takes a TeX expression and outputs a HTML string for the rendered math in displayed mode
 *
 * @param x TeX expression to be rendered
 * @param options defaults to `{overflowAuto: true, throwOnError: false}`.
 * overflowAuto is a custom option where the default `overflowAuto===true` wraps the generated HTML in a container with `style="overflow-x:auto;"`
 * All KaTeX options are supported, and with the exception of `throwOnError` and `displayMode` are left as default
 *
 * @returns HTML string generated by KaTeX representing displayed math
 *
 * With default options, is equivalent to calling `katex.renderToString(x, {throwOnError: false, displayMode: true})
 * and wrapping it in a container with `style="overflow-x:auto;"`
 */
declare function display(x: string, options?: KatexOptionsDisplay): string;
interface KatexOptionsDisplay extends katex.KatexOptions {
    overflowAuto?: boolean;
}

export { display, math };
